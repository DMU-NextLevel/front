import React, { useState } from 'react'

interface FAQItem {
  id: number
  category: string
  question: string
  answer: string
  icon: string
}

const Support: React.FC = () => {
  const [activeTab, setActiveTab] = useState<'notice' | 'faq' | 'inquiry'>('faq')
  const [selectedCategory, setSelectedCategory] = useState('회원가입 및 계정 관리')
  const [expandedId, setExpandedId] = useState<number | null>(null)
  const [searchTerm, setSearchTerm] = useState('')
  
  // 문의 등록 폼 상태
  const [inquiryForm, setInquiryForm] = useState({
    name: '',
    email: '',
    category: '일반 문의',
    title: '',
    content: ''
  })

  const categories = [
    '회원가입 및 계정 관리',
    '펀딩 프로젝트 이용',
    '프로젝트 창작자',
    '결제 및 환불'
  ]

  const faqData: FAQItem[] = [
    // 회원가입 및 계정 관리
    {
      id: 1,
      category: '회원가입 및 계정 관리',
      question: 'WithU에 어떻게 가입하나요?',
      answer: 'WithU는 이메일 가입과 소셜 로그인(구글, 카카오) 두 가지 방식을 모두 지원합니다. 원하는 방식을 선택하여 가입하실 수 있습니다.',
      icon: 'bi-person-circle'
    },
    {
      id: 2,
      category: '회원가입 및 계정 관리',
      question: '이메일로 가입했는데, 이메일 인증이 필요한가요?',
      answer: '네, 이메일 가입 시에는 회원님의 정보 보호를 위해 가입 시 입력하신 이메일로 인증 메일을 보내드립니다. 메일의 링크를 클릭하여 인증을 완료해야 정상적으로 서비스를 이용할 수 있습니다.',
      icon: 'bi-envelope-check'
    },
    {
      id: 3,
      category: '회원가입 및 계정 관리',
      question: '비밀번호를 잊어버렸어요.',
      answer: '이메일 가입 회원은 로그인 페이지 > 비밀번호 찾기를 통해 비밀번호를 재설정할 수 있습니다. 소셜 로그인 회원은 해당 소셜 계정의 비밀번호 찾기 기능을 이용하시면 됩니다.',
      icon: 'bi-key'
    },
    {
      id: 4,
      category: '회원가입 및 계정 관리',
      question: '계정을 삭제하고 싶어요.',
      answer: '로그인 후 마이페이지 > 계정 관리에서 회원 탈퇴를 진행하실 수 있습니다. 단, 탈퇴 시 모든 후원 내역과 프로젝트 기록이 삭제되며, 복구할 수 없으니 신중하게 결정해주세요.',
      icon: 'bi-person-x'
    },
    {
      id: 5,
      category: '회원가입 및 계정 관리',
      question: '닉네임이나 프로필 사진을 변경할 수 있나요?',
      answer: '네, 마이페이지에서 언제든지 닉네임과 프로필 사진을 변경할 수 있습니다. 변경된 정보는 모든 프로젝트 페이지에 즉시 반영됩니다.',
      icon: 'bi-pencil-square'
    },
    {
      id: 6,
      category: '회원가입 및 계정 관리',
      question: '소셜 로그인이 안 돼요.',
      answer: '소셜 로그인 오류가 발생하면 해당 소셜 서비스(구글, 카카오 등)의 계정 상태를 먼저 확인해 주세요. 지속적으로 문제가 발생할 경우, 고객센터에 문의해 주시면 신속하게 도와드리겠습니다.',
      icon: 'bi-exclamation-triangle'
    },
    
    // 펀딩 프로젝트 이용
    {
      id: 7,
      category: '펀딩 프로젝트 이용',
      question: '펀딩 프로젝트에 어떻게 후원하나요?',
      answer: '원하는 프로젝트 페이지에서 \'후원하기\' 버튼을 누른 후, 원하는 리워드를 선택하고 결제 정보를 입력하면 됩니다. 목표 금액 달성 시 결제가 실행됩니다.',
      icon: 'bi-heart-fill'
    },
    {
      id: 8,
      category: '펀딩 프로젝트 이용',
      question: '후원한 프로젝트가 실패하면 어떻게 되나요?',
      answer: '목표 금액을 달성하지 못한 프로젝트는 펀딩이 자동으로 취소됩니다. 후원 시 입력했던 결제 정보는 삭제되며, 실제로 금액이 청구되지 않습니다.',
      icon: 'bi-x-circle'
    },
    {
      id: 9,
      category: '펀딩 프로젝트 이용',
      question: '후원 내역을 변경하거나 취소할 수 있나요?',
      answer: '펀딩 기간 중에는 후원 내역을 취소할 수 있습니다. 마이페이지 > 나의 펀딩에서 해당 프로젝트를 찾아 \'후원 취소\' 버튼을 눌러주세요. 펀딩이 종료된 후에는 취소가 불가합니다.',
      icon: 'bi-arrow-counterclockwise'
    },
    {
      id: 10,
      category: '펀딩 프로젝트 이용',
      question: '리워드(보상)는 언제 받을 수 있나요?',
      answer: '리워드는 프로젝트가 성공적으로 종료되고 정산이 완료된 후, 창작자가 약속한 일정에 따라 순차적으로 발송됩니다. 정확한 발송 일정은 각 프로젝트 페이지에서 확인하실 수 있습니다.',
      icon: 'bi-gift'
    },
    {
      id: 11,
      category: '펀딩 프로젝트 이용',
      question: '후원한 금액을 더 늘리거나 줄일 수 있나요?',
      answer: '후원한 리워드는 변경할 수 없지만, 펀딩 기간 중에는 후원을 취소한 후 원하는 금액과 리워드로 다시 후원할 수 있습니다.',
      icon: 'bi-cash-stack'
    },
    {
      id: 12,
      category: '펀딩 프로젝트 이용',
      question: '프로젝트 업데이트 소식은 어디서 확인하나요?',
      answer: '후원한 프로젝트의 최신 소식은 프로젝트 페이지의 \'업데이트\' 탭에서 확인하실 수 있으며, 새로운 소식이 있을 경우 이메일로도 안내해 드립니다.',
      icon: 'bi-bell'
    },
    
    // 프로젝트 창작자
    {
      id: 13,
      category: '프로젝트 창작자',
      question: '프로젝트를 시작하려면 어떻게 해야 하나요?',
      answer: '로그인 후 \'프로젝트 시작하기\' 버튼을 눌러주세요. 프로젝트 가이드라인을 확인하고, 상세한 프로젝트 정보(목표 금액, 리워드 등)를 입력하면 심사 후 프로젝트가 게시됩니다.',
      icon: 'bi-rocket-takeoff'
    },
    {
      id: 14,
      category: '프로젝트 창작자',
      question: '펀딩에 성공하면 언제 정산받을 수 있나요?',
      answer: '펀딩이 성공적으로 종료되면, 영업일 기준 7일 내에 정산이 완료됩니다. 정산 금액에서 \'WithU\' 수수료를 제외한 금액이 창작자님의 계좌로 입금됩니다.',
      icon: 'bi-wallet2'
    },
    {
      id: 15,
      category: '프로젝트 창작자',
      question: '펀딩 실패 시, 리워드 배송 비용은 어떻게 되나요?',
      answer: '펀딩 실패 시에는 후원자들에게 결제 금액이 청구되지 않으므로, 리워드 배송 비용도 발생하지 않습니다.',
      icon: 'bi-truck'
    },
    {
      id: 16,
      category: '프로젝트 창작자',
      question: '프로젝트 심사는 얼마나 걸리나요?',
      answer: '프로젝트 심사는 영업일 기준 최대 3일 이내에 완료됩니다. 심사 결과는 등록하신 이메일로 안내해 드립니다.',
      icon: 'bi-hourglass-split'
    },
    {
      id: 17,
      category: '프로젝트 창작자',
      question: '프로젝트 진행 중에도 후원자들에게 연락할 수 있나요?',
      answer: '네, 프로젝트 페이지의 \'커뮤니티\' 탭을 통해 후원자들과 소통하거나, \'업데이트\' 기능을 통해 중요한 소식을 전체 후원자에게 전달할 수 있습니다.',
      icon: 'bi-chat-dots'
    },
    {
      id: 18,
      category: '프로젝트 창작자',
      question: '정산 금액에서 수수료를 제외한 금액이 입금되나요?',
      answer: '네, 펀딩 성공 후 정산 시 수수료를 제외한 최종 금액이 입금됩니다.',
      icon: 'bi-calculator'
    },
    
    // 결제 및 환불
    {
      id: 19,
      category: '결제 및 환불',
      question: '어떤 결제 수단을 이용할 수 있나요?',
      answer: '신용카드, 체크카드, 계좌이체 등 다양한 결제 수단을 지원합니다.',
      icon: 'bi-credit-card'
    },
    {
      id: 20,
      category: '결제 및 환불',
      question: '결제는 언제 이루어지나요?',
      answer: '펀딩 성공 여부가 결정된 후, 펀딩 종료일 다음 날에 등록하신 결제 수단으로 자동 청구됩니다.',
      icon: 'bi-calendar-check'
    },
    {
      id: 21,
      category: '결제 및 환불',
      question: '결제 실패 시 어떻게 되나요?',
      answer: '펀딩 종료 후 결제가 실패하면, 3일간 재결제를 시도합니다.',
      icon: 'bi-exclamation-circle'
    },
    {
      id: 22,
      category: '결제 및 환불',
      question: '후원 취소는 언제까지 가능한가요?',
      answer: '펀딩 기간 중에는 언제든지 후원을 취소할 수 있습니다. 펀딩이 종료된 후에는 취소가 불가합니다.',
      icon: 'bi-x-octagon'
    },
    {
      id: 23,
      category: '결제 및 환불',
      question: '환불 절차는 어떻게 되나요?',
      answer: '펀딩이 실패하여 자동 취소된 경우에는 별도의 환불 절차 없이 결제 금액이 청구되지 않습니다.',
      icon: 'bi-arrow-left-right'
    },
    {
      id: 24,
      category: '결제 및 환불',
      question: '프로젝트가 취소되면 결제 금액은 어떻게 되나요?',
      answer: '펀딩이 취소되면 후원 금액은 결제되지 않습니다. 이미 결제된 경우라면, 등록된 결제 수단으로 자동 환불 처리가 진행됩니다.',
      icon: 'bi-cash-coin'
    }
  ]

  const filteredFAQs = faqData.filter(faq => {
    const matchesCategory = faq.category === selectedCategory
    const matchesSearch = faq.question.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         faq.answer.toLowerCase().includes(searchTerm.toLowerCase())
    return matchesCategory && matchesSearch
  })

  const toggleFAQ = (id: number) => {
    setExpandedId(expandedId === id ? null : id)
  }

  // 섹션별 아이콘 매핑
  const categoryIcons: { [key: string]: string } = {
    '회원가입 및 계정 관리': 'bi-person-circle',
    '펀딩 프로젝트 이용': 'bi-heart-fill',
    '프로젝트 창작자': 'bi-rocket-takeoff',
    '결제 및 환불': 'bi-credit-card'
  }

  // 검색어 하이라이트 함수
  const highlightText = (text: string, searchTerm: string): string => {
    if (!searchTerm.trim()) return text
    
    const regex = new RegExp(`(${searchTerm})`, 'gi')
    return text.replace(regex, '<mark class="bg-yellow-200 text-gray-900 px-1 rounded">$1</mark>')
  }

  // 검색 초기화 함수
  const clearSearch = () => {
    setSearchTerm('')
    setSelectedCategory('전체')
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* 히어로 섹션 */}
      <div 
        className="relative bg-cover bg-center py-32"
        style={{
          backgroundImage: 'url(https://images.unsplash.com/photo-1553877522-43269d4ea984?w=1600)',
          backgroundBlendMode: 'overlay',
          backgroundColor: 'rgba(0,0,0,0.4)'
        }}
      >
        <div className="mx-auto px-4 sm:px-6 md:px-[8%] lg:px-[10%] xl:px-[12%] 2xl:px-[15%] text-center relative z-10">
          <h1 className="text-4xl md:text-5xl font-bold text-white mb-4">
            일상의 새로운 가능성을 그려가는 곳
          </h1>
          <p className="text-xl text-white mb-8">
            with<span className="text-purple-400">U</span> 고객센터입니다.
          </p>
        </div>
      </div>

      {/* 탭 메뉴 */}
      <div className="bg-white border-b border-gray-200 sticky top-0 z-40 shadow-sm">
        <div className="mx-auto px-4 sm:px-6 md:px-[8%] lg:px-[10%] xl:px-[12%] 2xl:px-[15%]">
          <div className="flex space-x-8">
            <button
              onClick={() => setActiveTab('notice')}
              className={`py-4 px-2 border-b-2 font-medium text-sm transition-colors ${
                activeTab === 'notice'
                  ? 'border-purple-600 text-purple-600'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              공지사항
            </button>
            <button
              onClick={() => setActiveTab('faq')}
              className={`py-4 px-2 border-b-2 font-medium text-sm transition-colors ${
                activeTab === 'faq'
                  ? 'border-purple-600 text-purple-600'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              자주 묻는 질문
            </button>
            <button
              onClick={() => setActiveTab('inquiry')}
              className={`py-4 px-2 border-b-2 font-medium text-sm transition-colors ${
                activeTab === 'inquiry'
                  ? 'border-purple-600 text-purple-600'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              문의 등록
            </button>
          </div>
        </div>
      </div>

      {/* 메인 컨텐츠 */}
      <div className="mx-auto px-4 sm:px-6 md:px-[8%] lg:px-[10%] xl:px-[12%] 2xl:px-[15%] py-12">
        {/* 공지사항 탭 */}
        {activeTab === 'notice' && (
          <div className="max-w-4xl mx-auto">
            <h2 className="text-3xl font-bold text-gray-900 mb-8">공지사항</h2>
            <div className="space-y-4">
              {[
                { id: 1, title: '[공지] WithU 서비스 이용약관 개정 안내', date: '2025.10.05', important: true },
                { id: 2, title: '[이벤트] 신규 가입 이벤트 진행 안내', date: '2025.10.03', important: false },
                { id: 3, title: '[점검] 정기 점검 안내 (10월 10일 02:00~06:00)', date: '2025.10.01', important: true },
                { id: 4, title: '[안내] 개인정보 처리방침 개정 안내', date: '2025.09.28', important: false },
                { id: 5, title: '[공지] 추석 연휴 고객센터 운영 안내', date: '2025.09.25', important: false },
              ].map(notice => (
                <div key={notice.id} className="bg-white border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow cursor-pointer">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-3">
                      {notice.important && (
                        <span className="px-2 py-1 bg-red-100 text-red-600 text-xs font-semibold rounded">
                          중요
                        </span>
                      )}
                      <h3 className="text-lg font-semibold text-gray-900 hover:text-purple-600">
                        {notice.title}
                      </h3>
                    </div>
                    <span className="text-sm text-gray-500">{notice.date}</span>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* FAQ 탭 */}
        {activeTab === 'faq' && (
          <>
            {/* 자주 묻는 질문 타이틀 */}
            <div className="text-center mb-8">
              <h2 className="text-3xl font-bold text-gray-900 mb-6">자주 묻는 질문</h2>
            </div>
        </div>

        {/* 검색창 */}
        <div className="max-w-2xl mx-auto mb-8">
          <div className="relative">
            <input
              type="text"
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              onKeyPress={(e) => {
                if (e.key === 'Enter' && searchTerm.trim()) {
                  setSelectedCategory('전체')
                }
              }}
              placeholder="궁금한 내용을 입력해 주세요"
              className="w-full px-6 py-4 pr-24 rounded-lg text-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent"
            />
            {searchTerm && (
              <button 
                onClick={clearSearch}
                className="absolute right-14 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600"
              >
                <i className="bi bi-x-circle text-xl"></i>
              </button>
            )}
            <button 
              onClick={() => searchTerm.trim() && setSelectedCategory('전체')}
              className="absolute right-4 top-1/2 -translate-y-1/2"
            >
              <i className="bi bi-search text-gray-400 text-xl hover:text-gray-600"></i>
            </button>
          </div>
          
          {/* 인기 검색어 */}
          <div className="mt-4 flex flex-wrap gap-2 justify-center">
            <span className="text-gray-600 text-sm">인기 검색어:</span>
            {['환불', '포인트결제', '스토어', '신용/리워드'].map(keyword => (
              <button
                key={keyword}
                onClick={() => setSearchTerm(keyword)}
                className="px-3 py-1 bg-purple-100 text-purple-700 text-sm rounded-full hover:bg-purple-200 transition-colors"
              >
                {keyword}
              </button>
            ))}
          </div>
        </div>

        {/* 검색 결과 표시 */}
        {searchTerm && (
          <div className="max-w-6xl mx-auto mb-6">
            <div className="bg-purple-50 border border-purple-200 rounded-lg p-4 flex items-center justify-between">
              <div className="flex items-center gap-2">
                <i className="bi bi-search text-purple-600"></i>
                <span className="text-gray-700">
                  '<span className="font-semibold text-purple-600">{searchTerm}</span>' 검색 결과: 
                  <span className="font-bold text-purple-600 ml-2">{filteredFAQs.length}개</span>
                </span>
              </div>
              <button
                onClick={clearSearch}
                className="text-gray-500 hover:text-gray-700 text-sm flex items-center gap-1"
              >
                <i className="bi bi-x-lg"></i>
                초기화
              </button>
            </div>
          </div>
        )}

        {/* 카테고리 필터 */}
        <div className="flex flex-wrap justify-center gap-3 mb-12">
          {categories.map(category => (
            <button
              key={category}
              onClick={() => setSelectedCategory(category)}
              className={`px-6 py-2.5 rounded-full text-sm font-medium transition-all ${
                selectedCategory === category
                  ? 'bg-purple-600 text-white shadow-lg'
                  : 'bg-white text-gray-700 hover:bg-gray-100 border border-gray-200'
              }`}
            >
              {category}
            </button>
          ))}
        </div>

        {/* FAQ 리스트 - 섹션별로 구분 */}
        {filteredFAQs.length === 0 ? (
          // 검색 결과 없음
          <div className="max-w-6xl mx-auto">
            <div className="text-center py-16">
              <i className="bi bi-search text-gray-300 text-6xl mb-4"></i>
              <h3 className="text-xl font-bold text-gray-700 mb-2">검색 결과가 없습니다</h3>
              <p className="text-gray-500 mb-6">다른 검색어로 다시 시도해보세요.</p>
              <button
                onClick={clearSearch}
                className="px-6 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors"
              >
                검색 초기화
              </button>
            </div>
          </div>
        ) : selectedCategory === '전체' ? (
          // 전체 보기일 때 섹션별로 구분하여 표시
          <>
            {categories.slice(1).map(category => {
              const categoryFAQs = faqData.filter(faq => faq.category === category && (
                !searchTerm || 
                faq.question.toLowerCase().includes(searchTerm.toLowerCase()) ||
                faq.answer.toLowerCase().includes(searchTerm.toLowerCase())
              ))
              
              // 검색 결과가 없는 카테고리는 표시하지 않음
              if (searchTerm && categoryFAQs.length === 0) return null
              
              return (
                <div key={category} className="mb-16">
                  <div className="max-w-6xl mx-auto">
                    <div className="flex items-center gap-3 mb-6 pb-3 border-b-2 border-purple-600">
                      <div className="w-10 h-10 bg-gradient-to-br from-purple-500 to-indigo-500 rounded-lg flex items-center justify-center flex-shrink-0 shadow-md">
                        <i className={`${categoryIcons[category]} text-white text-xl`}></i>
                      </div>
                      <h3 className="text-2xl font-bold text-gray-900">
                        {category}
                      </h3>
                    </div>
                    <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                      {categoryFAQs.map(faq => (
                        <div
                          key={faq.id}
                          className="bg-white rounded-lg border border-gray-200 overflow-hidden hover:shadow-lg transition-all group flex flex-col"
                        >
                          <div className="p-6 flex-1 flex flex-col">
                            {/* Question */}
                            <h3 
                              className="text-base font-semibold text-gray-900 mb-3 leading-snug group-hover:text-purple-600 transition-colors line-clamp-2"
                              dangerouslySetInnerHTML={{
                                __html: 'Q. ' + highlightText(faq.question, searchTerm)
                              }}
                            />
                            
                            {/* Answer Preview */}
                            <div className="flex-1 mb-4">
                              <span className="text-sm font-semibold text-gray-700 mb-2 block">A.</span>
                              <p 
                                className={`text-sm text-gray-600 leading-relaxed ${
                                  expandedId === faq.id ? '' : 'line-clamp-3'
                                }`}
                                dangerouslySetInnerHTML={{
                                  __html: highlightText(faq.answer, searchTerm)
                                }}
                              />
                            </div>
                            
                            {/* Toggle Button */}
                            <button
                              onClick={() => toggleFAQ(faq.id)}
                              className="w-full flex items-center justify-between text-purple-600 hover:text-purple-700 text-sm font-medium mt-auto pt-4 border-t border-gray-100 transition-colors"
                            >
                              <span>{expandedId === faq.id ? '접기' : '자세히 보기'}</span>
                              <i className={`bi ${expandedId === faq.id ? 'bi-chevron-up' : 'bi-chevron-down'} transition-transform`}></i>
                            </button>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              )
            })}
          </>
        ) : (
          // 특정 카테고리 선택 시
          <div className="max-w-6xl mx-auto mb-12">
            {selectedCategory !== '전체' && (
              <div className="flex items-center gap-3 mb-6 pb-3 border-b-2 border-purple-600">
                <div className="w-10 h-10 bg-gradient-to-br from-purple-500 to-indigo-500 rounded-lg flex items-center justify-center flex-shrink-0 shadow-md">
                  <i className={`${categoryIcons[selectedCategory]} text-white text-xl`}></i>
                </div>
                <h3 className="text-2xl font-bold text-gray-900">
                  {selectedCategory}
                </h3>
              </div>
            )}
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
              {filteredFAQs.map(faq => (
                <div
                  key={faq.id}
                  className="bg-white rounded-lg border border-gray-200 overflow-hidden hover:shadow-lg transition-all group flex flex-col"
                >
                  <div className="p-6 flex-1 flex flex-col">
                    {/* Question */}
                    <h3 className="text-base font-semibold text-gray-900 mb-3 leading-snug group-hover:text-purple-600 transition-colors line-clamp-2">
                      Q. {highlightText(faq.question, searchTerm)}
                    </h3>
                    
                    {/* Answer Preview */}
                    <div className="flex-1 mb-4">
                      <span className="text-sm font-semibold text-gray-700 mb-2 block">A.</span>
                      <p 
                        className={`text-sm text-gray-600 leading-relaxed ${
                          expandedId === faq.id ? '' : 'line-clamp-3'
                        }`}
                        dangerouslySetInnerHTML={{
                          __html: highlightText(faq.answer, searchTerm)
                        }}
                      />
                    </div>
                    
                    {/* Toggle Button */}
                    <button
                      onClick={() => toggleFAQ(faq.id)}
                      className="w-full flex items-center justify-between text-purple-600 hover:text-purple-700 text-sm font-medium mt-auto pt-4 border-t border-gray-100 transition-colors"
                    >
                      <span>{expandedId === faq.id ? '접기' : '자세히 보기'}</span>
                      <i className={`bi ${expandedId === faq.id ? 'bi-chevron-up' : 'bi-chevron-down'} transition-transform`}></i>
                    </button>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* 추가 도움말 섹션 */}
        <div className="mt-20 grid md:grid-cols-3 gap-6">
          <div className="bg-white rounded-lg p-8 text-center hover:shadow-lg transition-shadow border border-gray-200">
            <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <i className="bi bi-chat-dots text-blue-600 text-2xl"></i>
            </div>
            <h3 className="text-lg font-bold text-gray-900 mb-2">1:1 문의하기</h3>
            <p className="text-sm text-gray-600 mb-4">
              빠른 답변이 필요하신가요?<br />
              1:1 문의로 도움을 받으세요.
            </p>
            <button className="text-blue-600 font-medium hover:underline">
              문의하기 →
            </button>
          </div>

          <div className="bg-white rounded-lg p-8 text-center hover:shadow-lg transition-shadow border border-gray-200">
            <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <i className="bi bi-telephone text-green-600 text-2xl"></i>
            </div>
            <h3 className="text-lg font-bold text-gray-900 mb-2">전화 상담</h3>
            <p className="text-sm text-gray-600 mb-4">
              평일 09:00 - 18:00<br />
              (점심시간 12:00-13:00 제외)
            </p>
            <button className="text-green-600 font-medium hover:underline">
              1234-5678
            </button>
          </div>

          <div className="bg-white rounded-lg p-8 text-center hover:shadow-lg transition-shadow border border-gray-200">
            <div className="w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <i className="bi bi-envelope text-purple-600 text-2xl"></i>
            </div>
            <h3 className="text-lg font-bold text-gray-900 mb-2">이메일 문의</h3>
            <p className="text-sm text-gray-600 mb-4">
              자세한 문의사항을<br />
              이메일로 보내주세요.
            </p>
            <button className="text-purple-600 font-medium hover:underline">
              support@withu.com
            </button>
          </div>
        </div>
      </div>

      <style>{`
        @keyframes fadeIn {
          from {
            opacity: 0;
            transform: translateY(-10px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }
        
        .animate-fadeIn {
          animation: fadeIn 0.3s ease-out;
        }
        
        .line-clamp-4 {
          display: -webkit-box;
          -webkit-line-clamp: 4;
          -webkit-box-orient: vertical;
          overflow: hidden;
        }
      `}</style>
    </div>
  )
}

export default Support
